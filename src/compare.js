// const statement = "The patient is present and active on a specified registry. It does not check if the registry is active or not. The patient has a specified health maintenance modifier. The patient has a problem list diagnosis from the specified grouper. The patient has an encounter diagnosis from the specified grouper. The patient has an invoice diagnosis generated by Resolute Professional Billing claims from the specified grouper."

// The patient is present and active on a specified registry. It does not check if the registry is active or not. The patient has a specified health maintenance modifier. The patient has a problem list diagnosis from the specified grouper. The patient has an encounter diagnosis from the specified grouper. The patient has an invoice diagnosis generated by Resolute Professional Billing claims from the specified grouper.
// Extract each individual comparison in the statement and format them as key-value pairs. Separate any compound comparisons, and assign a mathematical operator "=" or "/=" to each, based on whether the condition is met or not met. "The patient is present and active on a specified registry. It does not check if the registry is active or not. The patient has a specified health maintenance modifier. The patient has a problem list diagnosis from the specified grouper. The patient has an encounter diagnosis from the specified grouper. The patient has an invoice diagnosis generated by Resolute Professional Billing claims from the specified grouper."

// Extract each individual comparison in the statement and format them as key-value pairs. Separate any compound comparisons, and assign a mathematical operator "=" or "/=" to each, based on whether the condition is met or not met. "The patient is present and active on a specified registry. It does not check if the registry is active or not. The patient has a specified health maintenance modifier. The patient has a problem list diagnosis from the specified grouper. The patient has an encounter diagnosis from the specified grouper. The patient has an invoice diagnosis generated by Resolute Professional Billing claims from the specified grouper." Output format: key;value;operator

// Extract each individual comparison in the statement and format them as key-value pairs. Separate any compound comparisons, and assign a mathematical operator "=" or "not equal symbol" to each, based on whether the condition is met or not met. "The patient is present and active on a specified registry. It does not check if the registry is active or not. The patient has a specified health maintenance modifier. The patient has a problem list diagnosis from the specified grouper. The patient has an encounter diagnosis from the specified grouper. The patient has an invoice diagnosis generated by Resolute Professional Billing claims from the specified grouper." each comparison Output format(JSON)

function modifyPrompt (prompt){
    
    return `
        Objective: Extract each individual comparison in the statement and format them as key-value pairs. For each comparison:

        Assign a mathematical operator = (met) or ≠ (not met) based on the condition.
        Format:

        Comparison: Break down compound comparisons into individual components.
        Key-Value Pair: Structure each as key: value, with the condition in parentheses.
        Operator: Use = if the condition is affirmative, ≠ if not.
        remove all special characters and new lines
        Example prompt: "John is on the list. no one cares about sick status" 

        Example json response: {"John is on the list": "=", "It does not check if the registry is active or not": "≠"}

        Prompt: ${prompt}
        `
    // return `Extract each individual comparison in the statement and format them as key-value pairs. Separate any compound comparisons, and assign a mathematical operator "=" or "/=" to each, based on whether the condition is met or not met. ${prompt} Output format(JSON LIST)`
}
export {modifyPrompt}